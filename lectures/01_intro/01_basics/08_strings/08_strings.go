package main

import (
	"fmt"
	"unicode/utf8"
)

func main() {
	// –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é
	var str string

	// –°—Ç—Ä–æ–∫–∞ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
	var hello string = "–ü—Ä–∏–≤–µ—Ç\n\t"

	// –°—Ç—Ä–æ–∫–∞ –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
	var world string = `–ú–∏—Ä\n\t`

	fmt.Println("str", str)
	fmt.Println("hello", hello)
	fmt.Println("world", world)

	// UTF-8 –∏–∑ –∫–æ—Ä–æ–±–∫–∏
	var helloWorld = "–ü—Ä–∏–≤–µ—Ç, –ú–∏—Ä!"
	hi := "‰Ω†Â•ΩÔºå‰∏ñÁïå"

	fmt.Println("helloWorld", helloWorld)
	fmt.Println("hi", hi)

	// –û–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –¥–ª—è –±–∞–π—Ç (uint8)
	var rawBinary byte = '\x27'

	// rune (uint32) –¥–ª—è UTF-8 —Å–∏–º–≤–æ–ª–æ–≤
	var someChinese rune = 'Ëå∂'
	var someEmoji rune = 'üòé'

	fmt.Println(rawBinary, someChinese, someEmoji)
	fmt.Println(string(rawBinary), string(someChinese), string(someEmoji))

	helloWorld = "–ü—Ä–∏–≤–µ—Ç –ú–∏—Ä"
	// –ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è —Å—Ç—Ä–æ–∫
	andGoodMorning := helloWorld + " –∏ –¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ!"

	fmt.Println(helloWorld, andGoodMorning)

	// –°—Ç—Ä–æ–∫–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã
	// cannot assign to helloWorld[0]
	// helloWorld[0] = 72

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏
	byteLen := len(helloWorld)                    // 19 –±–∞–π—Ç
	symbols := utf8.RuneCountInString(helloWorld) // 10 —Ä—É–Ω

	fmt.Println(byteLen, symbols)

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏, –≤ –±–∞–π—Ç–∞—Ö, –Ω–µ —Å–∏–º–≤–æ–ª–∞—Ö!
	hello = helloWorld[:12] // –ü—Ä–∏–≤–µ—Ç, 0-11 –±–∞–π—Ç—ã
	H := helloWorld[0]      // byte, 208, –Ω–µ "–ü"
	fmt.Println(H)

	// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Å–ª–∞–π—Å –±–∞–π—Ç –∏ –æ–±—Ä–∞—Ç–Ω–æ
	byteString := []byte(helloWorld)
	helloWorld = string(byteString)

	fmt.Println(byteString, helloWorld)

	// –ù–∞ –ø–æ–¥—É–º–∞—Ç—å:
	// –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å—Ç—Ä–æ–∫—É –¥–ª–∏–Ω–æ–π –≤ N —Å–∏–º–≤–æ–ª–æ–≤?
}
